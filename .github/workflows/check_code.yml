# Copyright 2024 - GitHub user: fredericks1982

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

#     http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License. 

# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Check code quality and run tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read

jobs:

  pytest:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12","3.13"]
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          allow-prereleases: true
          cache: pip
      - name: Install all dependencies
        run: |
          python -m pip install --upgrade pip
          pip install freezegun hypothesis pytest pytest-cov  pytest-timeout
      - name: Install came_domotic_unofficial as a package
        run: pip install -e .
      - name: Test with pytest
        run: |
          pytest --timeout 10 --cov came_domotic_unofficial  --cov-report xml --cov-report term-missing
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          # slug: camedomotic-unofficial/came_domotic_unofficial
          name: "pytest-${{ matrix.python-version }}"
          flags: "${{ matrix.python-version }}"
          fail_ci_if_error: false
          file: ./coverage.xml
          # verbose: true
