# Copyright 2024 - GitHub user: fredericks1982

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

#     http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License. 

# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Build and publish

on:
  workflow_dispatch:
    inputs:
      publish_to_test:
        description: 'Publish to test?'
        required: true
        type: boolean
        default: true
      publish_to_production:
        description: 'Publish to production?'
        required: true
        type: boolean
        default: false

permissions:
  contents: read

jobs:
  build_test:
    if: ${{ github.event.inputs.publish_to_test || github.event.inputs.publish_to_production}}
    environment: test
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v4
  
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
  
      - name: Install Poetry
        run: |
          pip install --upgrade pip
          pip install pipx
          pipx ensurepath
          pipx install poetry
  
      - name: Validate pyproject.toml
        run: poetry check

      - name: Install package dependencies    
        run: poetry install --no-root
        
      - name: Build with poetry
        run: poetry build

      - name: Upload built package as artifact
        uses: actions/upload-artifact@v4
        with:
          name: built-package-test
          path: dist/*
          if-no-files-found: error
          retention-days: 1
          overwrite: true

  publish_test:
    needs: build_test
    if: ${{ github.event.inputs.publish_to_test }}
    environment: testpypi
    runs-on: ubuntu-latest
    permissions:
      # IMPORTANT: this permission is mandatory for trusted publishing
      id-token: write

    steps:
      - name: Download built package
        uses: actions/download-artifact@v4
        with:
          name: built-package-test
          path: dist

      - name: Publish to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/

  build_production:
    if: ${{ github.event.inputs.publish_to_production }}
    needs: build_test
    environment: production
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v4
  
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
  
      - name: Install Poetry
        run: |
          pip install --upgrade pip
          pip install pipx
          pipx ensurepath
          pipx install poetry
  
      - name: Validate pyproject.toml
        run: poetry check

      - name: Install package dependencies    
        run: poetry install --no-root
        
      - name: Build with poetry
        run: poetry build

      - name: Upload built package as artifact
        uses: actions/upload-artifact@v4
        with:
          name: built-package-production
          path: dist/*
          if-no-files-found: error
          retention-days: 1
          overwrite: true
        
  publish_production:
    needs: build_production
    if: ${{ github.event.inputs.publish_to_production }}
    environment: pypi
    runs-on: ubuntu-latest
    permissions:
      # IMPORTANT: this permission is mandatory for trusted publishing
      id-token: write

    steps:
      - name: Download built package
        uses: actions/download-artifact@v4
        with:
          name: built-package-production
          path: dist

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        